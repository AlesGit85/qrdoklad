/**
 * QRdoklad Landing Page JavaScript
 * Hlavn√≠ inicializaƒçn√≠ soubor
 * 
 * Barvy projektu:
 * - Prim√°rn√≠: #B1D235
 * - Sekund√°rn√≠: #95B11F  
 * - ≈†ed√°: #6c757d
 * - ƒåern√°: #212529
 */

document.addEventListener('DOMContentLoaded', function() {
    console.log('QRdoklad Landing Page - DOMContentLoaded');
    
    // Inicializace modul≈Ø postupnƒõ - pouze tƒõch, kter√© existuj√≠
    try {
        // 1. Nejd≈ô√≠ve utility (loading, notifikace, analytics)
        if (window.Utilities) {
            console.log('‚úÖ Inicializuji Utilities moduly...');
            if (window.Utilities.LoadingStates) window.Utilities.LoadingStates.init();
            if (window.Utilities.Notifications) window.Utilities.Notifications.init();
            if (window.Utilities.Analytics) window.Utilities.Analytics.init();
        } else {
            console.log('‚ÑπÔ∏è Utilities modul nen√≠ dostupn√Ω (bude v dal≈°√≠m kroku)');
        }
        
        // 2. UI efekty (scroll, navbar, smooth scrolling) - UPRAVENO v kroku 1!
        if (typeof UIEffects !== 'undefined') {
            console.log('‚úÖ Inicializuji UIEffects moduly...');
            UIEffects.init();
        } else {
            console.warn('‚ö†Ô∏è UIEffects modul nenalezen');
        }
        
        // 3. Pricing funkcionalita - UPRAVENO v kroku 3!
        if (typeof PricingModule !== 'undefined') {
            console.log('‚úÖ Inicializuji PricingModule...');
            PricingModule.init();
        } else {
            console.log('‚ÑπÔ∏è PricingModule nen√≠ dostupn√Ω');
        }
        
        // 4. Formul√°≈ôe - UPRAVENO v kroku 2!
        if (typeof FormHandler !== 'undefined') {
            console.log('‚úÖ Inicializuji FormHandler...');
            FormHandler.init();
        } else {
            console.log('‚ÑπÔ∏è FormHandler nen√≠ dostupn√Ω');
        }
        
        console.log('üéâ QRdoklad Landing Page - inicializace dokonƒçena');
        
    } catch (error) {
        console.error('‚ùå Chyba p≈ôi inicializaci modul≈Ø:', error);
        
        // Fallback - alespo≈à z√°kladn√≠ funkcionalita
        console.log('üîÑ Spou≈°t√≠m fallback inicializaci...');
        initFallback();
    }
});

/**
 * Fallback inicializace pro p≈ô√≠pad selh√°n√≠ hlavn√≠ch modul≈Ø
 */
function initFallback() {
    console.log('üîÑ Spou≈°t√≠m fallback inicializaci...');
    
    // Z√°kladn√≠ smooth scrolling
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                const offsetTop = target.offsetTop - 80;
                window.scrollTo({
                    top: offsetTop,
                    behavior: 'smooth'
                });
            }
        });
    });
    
    // Z√°kladn√≠ navbar scroll efekt
    let lastScrollY = window.scrollY;
    window.addEventListener('scroll', () => {
        const navbar = document.querySelector('.navbar');
        if (navbar) {
            if (window.scrollY > 100) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        }
    });
    
    console.log('‚úÖ Fallback inicializace dokonƒçena');
}

/**
 * Glob√°ln√≠ utility funkce dostupn√© z cel√© aplikace
 */
window.QRDoklad = {
    // Verze pro debug
    version: '1.0.0',
    
    // Trackov√°n√≠ pro analytics
    trackEvent: function(action, category, label) {
        if (window.Utilities && window.Utilities.Analytics) {
            window.Utilities.Analytics.trackEvent(action, category, label);
        }
    },
    
    // Notifikace
    showNotification: function(message, type = 'info') {
        if (window.Utilities && window.Utilities.Notifications) {
            window.Utilities.Notifications.show(message, type);
        } else {
            console.log(`üì¢ ${type.toUpperCase()}: ${message}`);
        }
    },
    
    // Loading state
    showLoading: function(element, text) {
        if (window.Utilities && window.Utilities.LoadingStates) {
            window.Utilities.LoadingStates.show(element, text);
        }
    },
    
    hideLoading: function(element) {
        if (window.Utilities && window.Utilities.LoadingStates) {
            window.Utilities.LoadingStates.hide(element);
        }
    }
};

// Debug informace
console.log('üöÄ QRdoklad Landing v' + window.QRDoklad.version + ' naƒçten');